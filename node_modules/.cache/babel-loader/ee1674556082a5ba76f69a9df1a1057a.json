{"ast":null,"code":"//sets a local storage variable with an expiration\n//from https://www.sohamkamani.com/blog/javascript-localstorage-with-ttl-expiry/\nexport function setWithExpiry(key, value, ttl) {\n  const now = new Date(); // `item` is an object which contains the original value\n  // as well as the time when it's supposed to expire\n\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttl\n  };\n  localStorage.setItem(key, JSON.stringify(item));\n} //gets a local storage variable with expiration\n//https://www.sohamkamani.com/blog/javascript-localstorage-with-ttl-expiry/\n\nexport function getWithExpiry(key) {\n  const itemStr = localStorage.getItem(key); // if the item doesn't exist, return null\n\n  if (!itemStr) {\n    return null;\n  }\n\n  const item = JSON.parse(itemStr);\n  const now = new Date(); // compare the expiry time of the item with the current time\n\n  if (now.getTime() > item.expiry) {\n    // If the item is expired, delete the item from storage\n    // and return null\n    localStorage.removeItem(key);\n    return null;\n  }\n\n  return item.value;\n} //maps puzzle urls to map\n\nexport const mapping = new Map().set(\"fTbAJ\", 1).set(\"wNLH7\", 2).set(\"isVl1\", 3).set(\"5NaJn\", 4).set(\"bSKAp\", 5);\nexport const levelAndRoomDevice = new Map([[1, \"corkboard\"], [2, \"folder\"], [3, \"tablet\"], [4, \"computer\"], [5, \"whiteboard\"]]); //from: https://www.w3schools.com/js/js_cookies.asp\n\nexport function GetCookie(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  return \"\";\n}\n_c = GetCookie;\nexport function SetCookie(cname, cvalue, seconds) {\n  var d = new Date();\n  d.setTime(d.getTime() + seconds * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n_c2 = SetCookie;\nexport function logMetric(puzzleId, metricType, content) {\n  var body = {\n    PuzzleID: puzzleId,\n    MetricType: metricType,\n    Info: content\n  };\n  fetch(`${process.env.REACT_APP_API_URL}/game/metrics`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': GetCookie('auth')\n    },\n    body: JSON.stringify(body)\n  }).then(response => {\n    if (response.status === 200) {\n      console.log(\"metric logged sucessfully\");\n    } else {\n      console.log(\"failed to log metric\");\n    }\n  });\n}\nexport const handleTextBoxChange = (e, numTB) => {\n  numTB = numTB + 1;\n  const level = parseInt(getWithExpiry(\"level\"));\n\n  if (e.target.value !== \"\" && GetCookie(\"trackable\") === \"true\") {\n    console.log(level, \"InputBox\", numTB + \" \" + e.target.value.toLowerCase());\n    logMetric(level, \"InputBox\", numTB + \" \" + e.target.value.toLowerCase());\n  }\n}; //source: https://notestoself.dev/posts/finding-if-two-rectangles-overlap-in-javascript/\n\nexport function rectanglesOverlap(topLeft1, bottomRight1, topLeft2, bottomRight2) {\n  if (topLeft1[0] > bottomRight2[0] || topLeft2[0] > bottomRight1[0]) {\n    return false;\n  }\n\n  if (topLeft1[1] > bottomRight2[1] || topLeft2[1] > bottomRight1[1]) {\n    return false;\n  }\n\n  return true;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetCookie\");\n$RefreshReg$(_c2, \"SetCookie\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/UtilityFunctions.js"],"names":["setWithExpiry","key","value","ttl","now","Date","item","expiry","getTime","localStorage","setItem","JSON","stringify","getWithExpiry","itemStr","getItem","parse","removeItem","mapping","Map","set","levelAndRoomDevice","GetCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","SetCookie","cvalue","seconds","d","setTime","expires","toUTCString","logMetric","puzzleId","metricType","content","body","PuzzleID","MetricType","Info","fetch","process","env","REACT_APP_API_URL","method","headers","then","response","status","console","log","handleTextBoxChange","e","numTB","level","parseInt","target","toLowerCase","rectanglesOverlap","topLeft1","bottomRight1","topLeft2","bottomRight2"],"mappings":"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","sourcesContent":["//sets a local storage variable with an expiration\n//from https://www.sohamkamani.com/blog/javascript-localstorage-with-ttl-expiry/\nexport function setWithExpiry(key, value, ttl) {\n\tconst now = new Date()\n\n\t// `item` is an object which contains the original value\n\t// as well as the time when it's supposed to expire\n\tconst item = {\n\t\tvalue: value,\n\t\texpiry: now.getTime() + ttl,\n\t}\n\tlocalStorage.setItem(key, JSON.stringify(item))\n}\n\n//gets a local storage variable with expiration\n//https://www.sohamkamani.com/blog/javascript-localstorage-with-ttl-expiry/\nexport function getWithExpiry(key) {\n\tconst itemStr = localStorage.getItem(key)\n\t// if the item doesn't exist, return null\n\tif (!itemStr) {\n\t\treturn null\n\t}\n\tconst item = JSON.parse(itemStr)\n\tconst now = new Date()\n\t// compare the expiry time of the item with the current time\n\tif (now.getTime() > item.expiry) {\n\t\t// If the item is expired, delete the item from storage\n\t\t// and return null\n\t\tlocalStorage.removeItem(key)\n\t\treturn null\n\t}\n\treturn item.value\n}\n\n//maps puzzle urls to map\nexport const mapping = new Map()\n    .set(\"fTbAJ\", 1)\n    .set(\"wNLH7\", 2)\n    .set(\"isVl1\", 3)\n    .set(\"5NaJn\", 4)\n\t.set(\"bSKAp\", 5)\n\nexport const levelAndRoomDevice = new Map(\n\t[[1, \"corkboard\"], [2, \"folder\"], [3, \"tablet\"], [4, \"computer\"], [5, \"whiteboard\"]])\n\n\n//from: https://www.w3schools.com/js/js_cookies.asp\nexport function GetCookie(cname) {\n\tvar name = cname + \"=\";\n\tvar decodedCookie = decodeURIComponent(document.cookie);\n\tvar ca = decodedCookie.split(';');\n\tfor (var i = 0; i < ca.length; i++) {\n\t\tvar c = ca[i];\n\t\twhile (c.charAt(0) === ' ') {\n\t\tc = c.substring(1);\n\t\t}\n\t\tif (c.indexOf(name) === 0) {\n\t\treturn c.substring(name.length, c.length);\n\t\t}\n\t}\n\treturn \"\"\n}\n\nexport function SetCookie(cname, cvalue, seconds) {\n\tvar d = new Date();\n\td.setTime(d.getTime() + (seconds*1000));\n\tvar expires = \"expires=\"+ d.toUTCString();\n\tdocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  }\n\nexport function logMetric(puzzleId, metricType, content) {\n\tvar body = {\n\t\tPuzzleID: puzzleId,\n\t\tMetricType: metricType,\n\t\tInfo: content\n\t}\n\n    fetch(`${process.env.REACT_APP_API_URL}/game/metrics`, {\n        method: 'post',\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': GetCookie('auth')\n        },\n        body: JSON.stringify(body)\n    })\n    .then((response) => {\n      if(response.status === 200) {\n\t\tconsole.log(\"metric logged sucessfully\")\n      } else {\n        console.log(\"failed to log metric\")\n      }\n    })\n}\n\nexport const handleTextBoxChange = (e, numTB) => {\n\tnumTB = numTB + 1\n\tconst level = parseInt(getWithExpiry(\"level\"))\n\tif(e.target.value !== \"\" && GetCookie(\"trackable\") === \"true\") {\n\t\tconsole.log(level, \"InputBox\", numTB + \" \" + e.target.value.toLowerCase())\n\t\tlogMetric(level, \"InputBox\", numTB + \" \" + e.target.value.toLowerCase())\n\t}\n}\n\n//source: https://notestoself.dev/posts/finding-if-two-rectangles-overlap-in-javascript/\nexport function rectanglesOverlap(topLeft1, bottomRight1, topLeft2, bottomRight2) {\n\tif (topLeft1[0] > bottomRight2[0] || topLeft2[0] > bottomRight1[0]) {\n\t\treturn false;\n\t}\n\tif (topLeft1[1] > bottomRight2[1] || topLeft2[1] > bottomRight1[1]) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n"]},"metadata":{},"sourceType":"module"}