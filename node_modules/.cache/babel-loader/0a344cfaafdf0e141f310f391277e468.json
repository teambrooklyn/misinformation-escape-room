{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/components/PuzzleStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, MenuItem, FormControl, InputLabel, Select, Divider } from \"@material-ui/core\";\nimport styles from \"@/admin/style/statsStyle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GetCookie } from \"@/shared/UtilityFunctions\";\nimport PasswordStats from \"@/admin/components/PasswordStats\";\nimport TimeStats from \"@/admin/components/TimeStats\";\nimport InputStats from \"@/admin/components/InputStats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PuzzleStats = () => {\n  _s();\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const [puzzle, setPuzzle] = useState(1);\n  const [data, setData] = useState(\"\");\n\n  const getStats = puzzleId => {\n    setTimeout(() => {\n      fetch(`${process.env.REACT_APP_API_URL}/game/metrics?puzzleid=${puzzleId}`, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': GetCookie('auth')\n        }\n      }).then(response => {\n        if (response.status <= 201) {\n          response.json().then(data => {\n            console.log(data);\n            setData(data);\n            setPuzzle(puzzleId);\n          });\n        } else {\n          console.log(\"failed :(\", response.status);\n        }\n      });\n    }, 0);\n  };\n\n  useEffect(() => {\n    getStats(1);\n  }, []);\n\n  if (data !== \"\") {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.statsContent,\n      alignItems: \"center\",\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Puzzle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-outlined-label\",\n          id: \"demo-simple-select-outlined\",\n          value: puzzle,\n          onChange: e => {\n            getStats(e.target.value);\n          },\n          label: \"Puzzle\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 1,\n            children: \"Headlines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 2,\n            children: \"Misleading Charts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 3,\n            children: \"Deepfakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 4,\n            children: \"Emoji Math\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 5,\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TimeStats, {\n          timeData: data.filter(d => d.metrictype === \"TimeEvent\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(PasswordStats, {\n          passwordData: data.filter(d => d.metrictype === \"Password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(InputStats, {\n          puzzleId: puzzle,\n          inputData: data.filter(d => d.metrictype === \"Match\" || d.metrictype === \"InputBox\"),\n          children: \"s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(PuzzleStats, \"/AfltPFk3N4cKx1FrT+cyvd7aVU=\", true);\n\n_c = PuzzleStats;\nexport default PuzzleStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"PuzzleStats\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/components/PuzzleStats.js"],"names":["React","useEffect","useState","Grid","MenuItem","FormControl","InputLabel","Select","Divider","styles","makeStyles","GetCookie","PasswordStats","TimeStats","InputStats","PuzzleStats","useStyles","classes","puzzle","setPuzzle","data","setData","getStats","puzzleId","setTimeout","fetch","process","env","REACT_APP_API_URL","method","headers","then","response","status","json","console","log","statsContent","formControl","e","target","value","filter","d","metrictype"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid, MenuItem, FormControl, InputLabel, Select, Divider } from \"@material-ui/core\"\n\nimport styles from \"@/admin/style/statsStyle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GetCookie } from \"@/shared/UtilityFunctions\"\n\nimport PasswordStats from \"@/admin/components/PasswordStats\"\nimport TimeStats from \"@/admin/components/TimeStats\"\nimport InputStats from \"@/admin/components/InputStats\"\n\nconst PuzzleStats = () => {\n    const useStyles = makeStyles(styles);\n    const classes = useStyles();\n\n    const [puzzle, setPuzzle] = useState(1)\n    const [data, setData] = useState(\"\")\n\n    const getStats = (puzzleId) => {\n        setTimeout(() => {\n            fetch(`${process.env.REACT_APP_API_URL}/game/metrics?puzzleid=${puzzleId}`, {\n                method: 'get',\n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': GetCookie('auth')\n                },\n            })\n                .then((response) => {\n                if (response.status <= 201) {\n                    response.json().then((data) => {\n                        console.log(data)\n                        setData(data)\n                        setPuzzle(puzzleId)\n                    })\n                } else {\n                    console.log(\"failed :(\", response.status)\n                }\n                })\n            }, 0)\n    }\n\n    useEffect(()=>{\n        getStats(1)\n    },[])\n\nif(data !== \"\") {\n    return (\n        <Grid container className={classes.statsContent} alignItems=\"center\" direction=\"column\">\n             <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Puzzle</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={puzzle}\n                onChange={(e)=> {\n                    getStats(e.target.value)\n                }}\n                label=\"Puzzle\"\n                >\n                <MenuItem value={1}>Headlines</MenuItem>\n                <MenuItem value={2}>Misleading Charts</MenuItem>\n                <MenuItem value={3}>Deepfakes</MenuItem>\n                <MenuItem value={4}>Emoji Math</MenuItem>\n                <MenuItem value={5}>Network</MenuItem>\n                </Select>\n            </FormControl>\n            <Grid item xs={12}>\n                <TimeStats timeData={data.filter(d => d.metrictype === \"TimeEvent\")} ></TimeStats>\n            </Grid>\n            <Divider></Divider>\n            <Grid item xs={12}>\n                <PasswordStats passwordData={data.filter(d => d.metrictype === \"Password\")}></PasswordStats>\n            </Grid>\n            <Grid item xs={12}>\n                 <InputStats puzzleId={puzzle} inputData={data.filter(d => d.metrictype === \"Match\" || d.metrictype === \"InputBox\")}>s</InputStats>\n            </Grid>\n        </Grid>\n    )\n} else {\n    return (\n        <div>loading</div>\n    )\n}\n}\n\n\nexport default PuzzleStats;\n"]},"metadata":{},"sourceType":"module"}