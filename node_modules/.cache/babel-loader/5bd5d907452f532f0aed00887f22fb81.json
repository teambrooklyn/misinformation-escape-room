{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/pages/hub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch, Redirect, useHistory } from \"react-router-dom\";\nimport '@/shared/pages/hub.css';\nimport { Grid } from \"@material-ui/core\";\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\nimport { red } from \"@material-ui/core/colors\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Puzzle from \"@/shared/pages/Puzzle\";\nimport NavItem from \"@/shared/Hubs/computerHub/NavItem\";\nimport MessageDialog from \"@/shared/Components/MessageDialog\";\nimport { getWithExpiry, setWithExpiry, mapping, levelAndRoomDevice } from \"@/shared/UtilityFunctions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"@/shared/Assets/style/deviceStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst hubData = require(\"@/rooms/euphorigen/json/hub.json\");\n\nconst meta = require(\"@/rooms/euphorigen/json/metadata.json\");\n\nconst public_url = process.env.PUBLIC_URL;\nconst useStyles = makeStyles(style);\n\nconst Hub = () => {\n  _s();\n\n  const classes = useStyles();\n  const level = parseInt(getWithExpiry(\"level\"));\n  const preUploadVideoWatched = getWithExpiry(\"preUploadVideoWatched\");\n  const history = useHistory();\n  const [openMessageDialog, setOpenMessageDialog] = useState(false);\n  const [openDeepFakeMessageDialog, setOpenDeepFakeMessageDialog] = useState(false);\n  const [dialogClicked, setDialogClicked] = useState(false);\n  const [openMsgBubble, setOpenMsgBubble] = useState(true);\n  const currentDevice = getMessageDeviceBg(level);\n  const bgPath = getBackgroundPath(level);\n  let match = useRouteMatch();\n  let keys = [...mapping.keys()];\n  useEffect(() => {\n    if (level === 5 && window.location.pathname.split(\"/\")[3] === undefined) {\n      var timer = setTimeout(() => {\n        setOpenDeepFakeMessageDialog(true);\n        clearTimeout(timer);\n      }, 2000);\n      setOpenMsgBubble(false);\n    } else if (preUploadVideoWatched) {\n      setDialogClicked(true);\n      setOpenMsgBubble(false);\n    } else {\n      setOpenMsgBubble(true);\n      setDialogClicked(false);\n    }\n  }, [level, preUploadVideoWatched]);\n\n  const handleCloseDeepFakeMessageDialog = () => {\n    setOpenDeepFakeMessageDialog(false);\n    setOpenMessageDialog(true);\n  };\n\n  const handleCloseMessageDialog = () => {\n    if (level === 4) {\n      setWithExpiry(\"preUploadVideoWatched\", true, 1000000);\n      history.replace(`/upload/pre-1`);\n    } else {\n      setOpenMessageDialog(false);\n      setDialogClicked(true);\n    }\n  };\n\n  const password = getWithExpiry(\"password\");\n\n  if (!password) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  const navItems = hubData.navItem.map((item, key) => {\n    return /*#__PURE__*/_jsxDEV(NavItem, {\n      position: {\n        top: item.top,\n        left: item.left\n      },\n      size: item.size,\n      access: level === key + 1 && dialogClicked,\n      id: keys[key]\n    }, keys[key], false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:puzzleId`,\n      children: /*#__PURE__*/_jsxDEV(Puzzle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        spacing: 0,\n        className: classes.svgContainer // inline style enable the bg to reload on every render\n        ,\n        style: {\n          backgroundImage: `url(${public_url}/images/${bgPath})`\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          style: {\n            position: \"relative\"\n          },\n          className: \"inner-grid\",\n          children: [/*#__PURE__*/_jsxDEV(Zoom, {\n            in: openMsgBubble,\n            style: {\n              transitionDelay: \"100ms\",\n              margin: \"100px 0px 0px 80px\",\n              position: \"absolute\",\n              top: `${hubData.MessageBubble.top}px`,\n              left: `${hubData.MessageBubble.left}px`\n            },\n            children: /*#__PURE__*/_jsxDEV(ChatRoundedIcon, {\n              style: {\n                color: red[300],\n                zIndex: 4,\n                width: \"50px\",\n                height: \"50px\"\n              },\n              onClick: () => {\n                setOpenMsgBubble(false);\n                setOpenMessageDialog(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n            className: \"lighting\",\n            in: dialogClicked,\n            style: {\n              transitionDelay: \"100ms\",\n              position: \"absolute\",\n              top: `${hubData.lightingPosition[level - 1].top}px`,\n              left: `${hubData.lightingPosition[level - 1].left}px`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${public_url}/images/room/light_effect/${currentDevice}.png`,\n              alt: \"lighting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), navItems, /*#__PURE__*/_jsxDEV(Dialog, {\n            open: openDeepFakeMessageDialog,\n            PaperProps: {\n              style: {\n                backgroundColor: 'transparent',\n                boxShadow: 'none'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              wrap: \"nowrap\",\n              className: classes.message,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"MESSAGES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You have a new message!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.openButton,\n                onClick: handleCloseDeepFakeMessageDialog,\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MessageDialog, {\n            textContent: meta.script[level - 1],\n            openDialog: openMessageDialog,\n            setOpenDialog: handleCloseMessageDialog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hub, \"up2NZqsVPpGCFi3C2UDWG6ncUZY=\", false, function () {\n  return [useStyles, useHistory, useRouteMatch];\n});\n\n_c = Hub;\n\nfunction getBackgroundPath(level) {\n  let bgPath = \"room/main_hub.png\";\n\n  if (level === 5) {\n    bgPath = \"room/white_board_up/room.png\";\n  }\n\n  return bgPath;\n}\n\nfunction getMessageDeviceBg(level) {\n  return levelAndRoomDevice.get(level);\n}\n\nexport default Hub;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hub\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/pages/hub.js"],"names":["React","useState","useEffect","Switch","Route","useRouteMatch","Redirect","useHistory","Grid","ChatRoundedIcon","red","Zoom","Dialog","Puzzle","NavItem","MessageDialog","getWithExpiry","setWithExpiry","mapping","levelAndRoomDevice","makeStyles","style","hubData","require","meta","public_url","process","env","PUBLIC_URL","useStyles","Hub","classes","level","parseInt","preUploadVideoWatched","history","openMessageDialog","setOpenMessageDialog","openDeepFakeMessageDialog","setOpenDeepFakeMessageDialog","dialogClicked","setDialogClicked","openMsgBubble","setOpenMsgBubble","currentDevice","getMessageDeviceBg","bgPath","getBackgroundPath","match","keys","window","location","pathname","split","undefined","timer","setTimeout","clearTimeout","handleCloseDeepFakeMessageDialog","handleCloseMessageDialog","replace","password","navItems","navItem","map","item","key","top","left","size","path","svgContainer","backgroundImage","position","transitionDelay","margin","MessageBubble","color","zIndex","width","height","lightingPosition","backgroundColor","boxShadow","message","openButton","script","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch, Redirect, useHistory } from \"react-router-dom\";\n\nimport '@/shared/pages/hub.css'\nimport { Grid } from \"@material-ui/core\";\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\nimport { red } from \"@material-ui/core/colors\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport Puzzle from \"@/shared/pages/Puzzle\";\n\nimport NavItem from \"@/shared/Hubs/computerHub/NavItem\";\nimport MessageDialog from \"@/shared/Components/MessageDialog\";\nimport { getWithExpiry, setWithExpiry, mapping, levelAndRoomDevice } from \"@/shared/UtilityFunctions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"@/shared/Assets/style/deviceStyle.js\";\n\nconst hubData = require(\"@/rooms/euphorigen/json/hub.json\");\nconst meta = require(\"@/rooms/euphorigen/json/metadata.json\");\nconst public_url = process.env.PUBLIC_URL;\n\nconst useStyles = makeStyles(style)\n\nconst Hub = () => {\n  const classes = useStyles();\n\n  const level = parseInt(getWithExpiry(\"level\"))\n  const preUploadVideoWatched = getWithExpiry(\"preUploadVideoWatched\");\n  const history = useHistory()\n  const [openMessageDialog, setOpenMessageDialog] = useState(false);\n  const [openDeepFakeMessageDialog, setOpenDeepFakeMessageDialog] = useState(false);\n  const [dialogClicked, setDialogClicked] = useState(false);\n  const [openMsgBubble, setOpenMsgBubble] = useState(true);\n  const currentDevice = getMessageDeviceBg(level)\n  const bgPath = getBackgroundPath(level)\n\n  let match = useRouteMatch();\n\n  let keys = [...mapping.keys()];\n\n  useEffect(() => {\n    if (level === 5 && window.location.pathname.split(\"/\")[3] === undefined) {\n      var timer = setTimeout(()=>{\n        setOpenDeepFakeMessageDialog(true)\n        clearTimeout(timer)\n      }, 2000)\n\n      setOpenMsgBubble(false)\n    } else if (preUploadVideoWatched) {\n      setDialogClicked(true)\n      setOpenMsgBubble(false)\n    } else {\n      setOpenMsgBubble(true)\n      setDialogClicked(false)\n    }\n  },[level, preUploadVideoWatched])\n\n  const handleCloseDeepFakeMessageDialog = () => {\n    setOpenDeepFakeMessageDialog(false);\n    setOpenMessageDialog(true);\n  };\n\n  const handleCloseMessageDialog = () => {\n    if (level === 4) {\n      setWithExpiry(\"preUploadVideoWatched\", true, 1000000)\n      history.replace(`/upload/pre-1`)\n    } else {\n      setOpenMessageDialog(false)\n      setDialogClicked(true)\n    }\n  };\n\n  const password = getWithExpiry(\"password\")\n\n  if (!password) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/\"\n        }}\n      />\n    );\n  }\n\n  const navItems = hubData.navItem.map((item, key) => {\n    return (\n      <NavItem\n        position={{top: item.top, left: item.left}}\n        size={item.size}\n        access={(level === key + 1 && dialogClicked)}\n        id={keys[key]}\n        key={keys[key]}\n      />\n    )\n  })\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/:puzzleId`}>\n        <Puzzle/>\n      </Route>\n      <Route path={match.path}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={0}\n          className={classes.svgContainer}\n          // inline style enable the bg to reload on every render\n          style={{ backgroundImage: `url(${public_url}/images/${bgPath})`,}}\n        >\n            <Grid style={{position: \"relative\"}} className=\"inner-grid\">\n              <Zoom\n                in={openMsgBubble}\n                style={{\n                  transitionDelay: \"100ms\",\n                  margin: \"100px 0px 0px 80px\",\n                  position: \"absolute\",\n                  top: `${hubData.MessageBubble.top}px`,\n                  left: `${hubData.MessageBubble.left}px`\n                }}>\n                <ChatRoundedIcon\n                  style={{\n                    color: red[300],\n                    zIndex: 4,\n                    width: \"50px\",\n                    height: \"50px\"\n                  }}\n\n                  onClick={() => {\n                    setOpenMsgBubble(false)\n                    setOpenMessageDialog(true);\n                  }}\n                      />\n              </Zoom>\n\n              <Zoom className=\"lighting\"\n                in={dialogClicked}\n                style={{\n                  transitionDelay: \"100ms\",\n                  position: \"absolute\",\n                  top: `${hubData.lightingPosition[level - 1].top}px`,\n                  left: `${hubData.lightingPosition[level - 1].left}px`,\n                }}\n              >\n                <img src={`${public_url}/images/room/light_effect/${currentDevice}.png`} alt=\"lighting\"/>\n              </Zoom>\n\n              {navItems}\n\n              <Dialog\n                open={openDeepFakeMessageDialog}\n                PaperProps={{\n                  style: {\n                    backgroundColor: 'transparent',\n                    boxShadow: 'none',\n                  },\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  wrap=\"nowrap\"\n                  className={classes.message}>\n                  <strong>MESSAGES</strong>\n\n                  <p>You have a new message!</p>\n\n                  <p className={classes.openButton} onClick={handleCloseDeepFakeMessageDialog}>Open</p>\n                </Grid>\n\n              </Dialog>\n\n              <MessageDialog\n                textContent={meta.script[level - 1]}\n                openDialog={openMessageDialog}\n                setOpenDialog={handleCloseMessageDialog}\n              />\n\n            </Grid>\n          </Grid>\n      </Route>\n    </Switch>\n  );\n};\n\nfunction getBackgroundPath(level) {\n  let bgPath = \"room/main_hub.png\"\n\n  if (level === 5) {\n      bgPath = \"room/white_board_up/room.png\"\n  }\n\n  return bgPath\n}\n\nfunction getMessageDeviceBg(level) {\n  return levelAndRoomDevice.get(level)\n}\n\nexport default Hub;\n"]},"metadata":{},"sourceType":"module"}