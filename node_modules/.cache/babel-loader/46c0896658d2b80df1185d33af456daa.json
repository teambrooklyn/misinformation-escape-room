{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/Components/CustomForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport { getWithExpiry, setWithExpiry, GetCookie, logMetric } from \"@/shared/UtilityFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  button: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#FFE790\"\n  },\n  form: {\n    width: \"100%\"\n  },\n  input: {\n    fontSize: \"20\"\n  },\n  label: {\n    color: \"white\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  puzzle5Input: {\n    fontSize: \"20\",\n    color: \"white\"\n  }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst CustomForm = props => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const level = parseInt(getWithExpiry(\"level\"));\n    var body = {\n      \"password\": password,\n      \"puzzle\": level\n    };\n    fetch(`${process.env.REACT_APP_API_URL}/game/comparepassword`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': GetCookie('auth')\n      },\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.status === 200) {\n        setPassword(\"\"); //set level to next.\n\n        setWithExpiry(\"level\", level + 1, 7200000);\n\n        if (GetCookie(\"trackable\") === \"true\") {\n          logMetric(level, \"TimeEvent\", \"end\");\n        }\n\n        let newLevel = props.id + 1;\n        alert(\"Password is correct. Congrats!\");\n\n        switch (newLevel) {\n          // case 4:\n          //   history.replace(`/upload/pre-1`);\n          //   break;\n          case 5:\n            history.replace(`/upload/1`);\n            break;\n\n          case 6:\n            history.replace(`/upload/2`);\n            break;\n\n          default:\n            history.replace('/puzzles');\n            break;\n        }\n      } else {\n        if (GetCookie(\"trackable\") === \"true\") {\n          logMetric(level, \"Password\", password);\n        }\n\n        alert(\"Password incorrect. Please check your answer and try again.\");\n      }\n    });\n  };\n\n  const handleChange = e => setPassword(e.target.value.toLowerCase());\n\n  const classes = useStyles();\n  let content;\n\n  if (props.id === 2) {\n    content = /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      autoComplete: \"off\",\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Enter Password\",\n              fullWidth: true,\n              InputProps: {\n                className: classes.input\n              },\n              InputLabelProps: {\n                className: classes.label\n              },\n              required: true,\n              className: classes.margin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"medium\",\n              fullWidth: true,\n              color: \"primary\",\n              className: classes.margin,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  } else if (props.id === 5) {\n    content = /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      autoComplete: \"off\",\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Enter Password\",\n              fullWidth: true,\n              InputProps: {\n                className: classes.puzzle5Input\n              },\n              InputLabelProps: {\n                className: classes.puzzle5Input\n              },\n              required: true,\n              className: classes.margin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"medium\",\n              fullWidth: true,\n              color: \"primary\",\n              className: classes.margin,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      autoComplete: \"off\",\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Enter Password\",\n              fullWidth: true,\n              InputProps: {\n                className: classes.input\n              },\n              InputLabelProps: {\n                className: classes.input\n              },\n              required: true,\n              className: classes.margin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"medium\",\n              fullWidth: true,\n              color: \"primary\",\n              className: classes.margin,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CustomForm, \"+AQj5AVuASSVmYaQEpR7KMe2RAg=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/Components/CustomForm.js"],"names":["React","useState","useHistory","TextField","makeStyles","Button","Grid","Container","getWithExpiry","setWithExpiry","GetCookie","logMetric","styles","theme","margin","spacing","button","backgroundColor","form","width","input","fontSize","label","color","paper","display","flexDirection","alignItems","puzzle5Input","useStyles","CustomForm","props","password","setPassword","history","handleSubmit","event","preventDefault","level","parseInt","body","fetch","process","env","REACT_APP_API_URL","method","headers","JSON","stringify","then","response","status","newLevel","id","alert","replace","handleChange","e","target","value","toLowerCase","classes","content","className"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { getWithExpiry, setWithExpiry, GetCookie, logMetric } from \"@/shared/UtilityFunctions\";\n\nconst styles = (theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#FFE790\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  input: {\n    fontSize: \"20\",\n  },\n  label: {\n    color: \"white\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  puzzle5Input: {\n    fontSize: \"20\",\n    color: \"white\"\n  }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst CustomForm = (props) => {\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const level = parseInt(getWithExpiry(\"level\"))\n\n    var body =\n    {\n        \"password\": password,\n        \"puzzle\": level\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}/game/comparepassword`, {\n        method: 'post',\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': GetCookie('auth')\n        },\n        body: JSON.stringify(body)\n    })\n    .then((response)=>{\n      if(response.status === 200) {\n        setPassword(\"\");\n        //set level to next.\n        setWithExpiry(\"level\", level + 1, 7200000)\n\n        if(GetCookie(\"trackable\") === \"true\") {\n          logMetric(level, \"TimeEvent\", \"end\")\n        }\n\n        let newLevel = props.id + 1;\n        alert(\"Password is correct. Congrats!\");\n\n        switch (newLevel) {\n          // case 4:\n          //   history.replace(`/upload/pre-1`);\n          //   break;\n          case 5:\n            history.replace(`/upload/1`);\n            break;\n          case 6:\n            history.replace(`/upload/2`);\n            break;\n          default:\n            history.replace('/puzzles');\n            break;\n        }\n\n      } else {\n        if(GetCookie(\"trackable\") === \"true\") {\n          logMetric(level, \"Password\", password)\n        }\n        alert(\"Password incorrect. Please check your answer and try again.\");\n      }\n    })\n\n  };\n\n  const handleChange = (e) => setPassword(e.target.value.toLowerCase());\n\n  const classes = useStyles();\n  let content;\n\n\n    if (props.id === 2) {\n      content =\n        <form\n        className={classes.form}\n        autoComplete=\"off\"\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.paper}>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Container maxWidth=\"xs\">\n              <TextField\n                id=\"standard-basic\"\n                label=\"Enter Password\"\n                fullWidth\n                InputProps={{ className: classes.input }}\n                InputLabelProps={{ className: classes.label }}\n                required\n                className={classes.margin}\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"medium\"\n                fullWidth\n                color=\"primary\"\n                className={classes.margin}\n              >\n                Confirm\n              </Button>\n            </Container>\n          </Grid>\n        </div>\n      </form>\n    } else if (props.id === 5) {\n      content =\n      <form\n      className={classes.form}\n      autoComplete=\"off\"\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    >\n      <div className={classes.paper}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Container maxWidth=\"xs\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Enter Password\"\n              fullWidth\n              InputProps={{ className: classes.puzzle5Input }}\n              InputLabelProps={{ className: classes.puzzle5Input }}\n              required\n              className={classes.margin}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"medium\"\n              fullWidth\n              color=\"primary\"\n              className={classes.margin}\n            >\n              Confirm\n            </Button>\n          </Container>\n        </Grid>\n      </div>\n    </form>\n    } else {\n      content =\n      <form\n      className={classes.form}\n      autoComplete=\"off\"\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n    >\n      <div className={classes.paper}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Container maxWidth=\"xs\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Enter Password\"\n              fullWidth\n              InputProps={{ className: classes.input }}\n              InputLabelProps={{ className: classes.input }}\n              required\n              className={classes.margin}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"medium\"\n              fullWidth\n              color=\"primary\"\n              className={classes.margin}\n            >\n              Confirm\n            </Button>\n          </Container>\n        </Grid>\n      </div>\n    </form>\n\n  }\n\n  return content;\n};\n\nexport default CustomForm;\n"]},"metadata":{},"sourceType":"module"}