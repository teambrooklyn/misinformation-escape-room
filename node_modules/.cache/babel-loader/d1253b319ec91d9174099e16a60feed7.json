{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/puzzles/puzzle1/Puzzle1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport TackBoard from \"./TackBoard\";\nimport CustomForm from \"@/shared/Components/CustomForm.js\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport './Puzzle1.css';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"./style\"; // TODO: change to props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst puzzle1 = require(\"../../../rooms/euphorigen/json/puzzle1.json\");\n\nconst useStyles = makeStyles(style);\n\nconst Puzzle1 = () => {\n  _s();\n\n  const {\n    password,\n    prompts,\n    statements,\n    puzzleText,\n    initialPosition\n  } = puzzle1;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      className: classes.background,\n      id: \"p1grid\" //see app.css for p1grid, sets fit-height for both firefox and non-firefox.\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          className: classes.alert,\n          children: puzzleText.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.passwordForm,\n          children: /*#__PURE__*/_jsxDEV(CustomForm, {\n            id: 1,\n            password: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        children: prompts.slice(0, 3).map((_ref, key) => {\n          let {\n            text\n          } = _ref;\n          const statement = statements[key];\n          const position = initialPosition[key];\n          return /*#__PURE__*/_jsxDEV(TackBoard, {\n            text: text,\n            keyNumber: key,\n            statement: statement,\n            position: position\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        children: prompts.slice(3, 6).map((_ref2, key) => {\n          let {\n            text\n          } = _ref2;\n          const currentKey = key + 3;\n          const statement = statements[currentKey];\n          const position = initialPosition[currentKey];\n          return /*#__PURE__*/_jsxDEV(TackBoard, {\n            text: text,\n            keyNumber: currentKey,\n            statement: statement,\n            position: position\n          }, currentKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        children: prompts.slice(6, 9).map((_ref3, key) => {\n          let {\n            text\n          } = _ref3;\n          const currentKey = key + 6;\n          const statement = statements[currentKey];\n          const position = initialPosition[currentKey];\n          return /*#__PURE__*/_jsxDEV(TackBoard, {\n            text: text,\n            keyNumber: currentKey,\n            statement: statement,\n            position: position\n          }, currentKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Puzzle1, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Puzzle1;\nexport default Puzzle1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Puzzle1\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/puzzles/puzzle1/Puzzle1.js"],"names":["React","Grid","TackBoard","CustomForm","Alert","makeStyles","style","puzzle1","require","useStyles","Puzzle1","password","prompts","statements","puzzleText","initialPosition","classes","background","alert","message","passwordForm","slice","map","key","text","statement","position","currentKey"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport TackBoard from \"./TackBoard\"\nimport CustomForm from \"@/shared/Components/CustomForm.js\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport './Puzzle1.css';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"./style\";\n\n// TODO: change to props\nconst puzzle1 = require(\"../../../rooms/euphorigen/json/puzzle1.json\");\nconst useStyles = makeStyles(style)\n\nconst Puzzle1 = () => {\n  const { password, prompts, statements, puzzleText, initialPosition } = puzzle1;\n\n  const classes = useStyles()\n  return (\n    <>\n      <Grid container direction=\"column\"alignItems=\"center\" justifyContent=\"center\" className={classes.background} id=\"p1grid\"\n        //see app.css for p1grid, sets fit-height for both firefox and non-firefox.\n      >\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n\n          <Alert severity=\"info\" className={classes.alert}>\n            {puzzleText.message}\n          </Alert>\n\n          <Grid className={classes.passwordForm}>\n            <CustomForm id={1} password={password}/>\n          </Grid>\n        </Grid>\n\n          <Grid container direction =\"row\" justifyContent=\"center\" alignItems=\"center\" wrap=\"nowrap\">\n              {prompts.slice(0, 3).map(({text}, key)=>{\n              const statement = statements[key];\n              const position = initialPosition[key];\n\n                return <TackBoard text={text} key={key} keyNumber={key} statement={statement} position={position}/>\n              })}\n          </Grid>\n\n          <Grid container direction =\"row\" justifyContent=\"center\" alignItems=\"center\" wrap=\"nowrap\">\n              {prompts.slice(3, 6).map(({text}, key)=>{\n              const currentKey = key + 3;\n              const statement = statements[currentKey];\n              const position = initialPosition[currentKey];\n\n                return <TackBoard text={text} key={currentKey} keyNumber={currentKey} statement={statement} position={position}/>\n              })}\n          </Grid>\n\n          <Grid container direction =\"row\" justifyContent=\"center\" alignItems=\"center\" wrap=\"nowrap\">\n              {prompts.slice(6, 9).map(({text}, key)=>{\n              const currentKey = key + 6;\n              const statement = statements[currentKey];\n              const position = initialPosition[currentKey];\n\n                return <TackBoard text={text} key={currentKey} keyNumber={currentKey} statement={statement} position={position}/>\n              })}\n          </Grid>\n    </Grid>\n  </>\n  );\n};\nexport default Puzzle1;\n"]},"metadata":{},"sourceType":"module"}