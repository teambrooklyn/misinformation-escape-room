{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport { Grid, Typography, Button, TextField, AppBar, Toolbar } from \"@material-ui/core\";\nimport PuzzleStats from \"@/admin/components/PuzzleStats\";\nimport { SetCookie, GetCookie } from \"@/shared/UtilityFunctions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"@/admin/style/adminStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\n\nconst Admin = () => {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const match = useRouteMatch();\n  const [loggedIn, setLogIn] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [trackable, updateTrackablePassword] = useState(\"\");\n  const [trackableConfirm, updateTrackablePasswordConfirm] = useState(\"\");\n  const [nonTrackable, updateNonTrackablePassword] = useState(\"\");\n  const [nonTrackableConfirm, updateNonTrackablePasswordConfirm] = useState(\"\");\n  const [passwords, setPasswords] = useState(\"\");\n\n  const updatePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const login = () => {\n    var body = {\n      \"password\": password,\n      \"management\": true\n    };\n    console.log(body);\n    setTimeout(() => {\n      fetch(`${process.env.REACT_APP_API_URL}/v1/sessions`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).then(response => {\n        if (response.status <= 201) {\n          console.log(response.headers.get(\"authorization\"));\n          const auth = response.headers.get(\"authorization\");\n          SetCookie(\"auth\", auth, 3600);\n          SetCookie(\"adminSession\", true, 3600);\n          response.json().then(data => {\n            console.log(data);\n          });\n          setLogIn(true);\n        } else {\n          console.log(\"failed :(\", response.status);\n          alert(\"Incorrect password\");\n        }\n      });\n    }, 0);\n  };\n\n  const getPassword = () => {\n    setTimeout(() => {\n      fetch(`${process.env.REACT_APP_API_URL}/game/manage/password`, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': GetCookie('auth')\n        }\n      }).then(response => {\n        if (response.status <= 201) {\n          response.json().then(data => {\n            setPasswords(data);\n            console.log(data);\n          });\n        } else {\n          console.log(\"failed :(\", response.status);\n        }\n      });\n    }, 0);\n  };\n\n  const setERPassword = (password, track) => {\n    var body = {\n      \"password\": password,\n      \"track\": track\n    };\n    setTimeout(() => {\n      fetch(`${process.env.REACT_APP_API_URL}/game/manage/password`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': GetCookie('auth')\n        },\n        body: JSON.stringify(body)\n      }).then(response => {\n        if (response.status <= 201) {\n          console.log(\"changed\");\n          alert(\"Password changed to \" + password);\n        } else {\n          console.log(\"failed :(\", response.status);\n        }\n      });\n    }, 0);\n  };\n\n  if (GetCookie('adminSession') || loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.allContent,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            onClick: () => {\n              history.push(match.path);\n            },\n            children: \"Euphorigen Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => {\n              history.push(match.path + \"/passwords\");\n            },\n            children: \"Manage Passwords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => {\n              SetCookie(\"auth\", \"\", 1);\n              SetCookie(\"adminSession\", true, 1);\n              history.push(\"/\");\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/passwords`,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            className: classes.changePWGrid,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \" Change Passwords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \" Trackable Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.textarea,\n              label: \"Password\",\n              variant: \"outlined\",\n              onChange: event => {\n                updateTrackablePassword(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.textarea,\n              label: \"Confirm Password\",\n              variant: \"outlined\",\n              onChange: event => {\n                updateTrackablePasswordConfirm(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"small\",\n              color: \"primary\",\n              style: {\n                marginTop: \"15px\",\n                marginLeft: \"5px\"\n              },\n              onClick: () => {\n                if (trackable === trackableConfirm) {\n                  setERPassword(trackable, true);\n                  alert(\"Trackable password changed to\" + trackable);\n                } else {\n                  alert(\"Passwords do not match\");\n                }\n              },\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \" Non-Trackable Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.textarea,\n              label: \"Password\",\n              variant: \"outlined\",\n              onChange: event => {\n                updateNonTrackablePassword(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.textarea,\n              label: \" Confirm Password\",\n              variant: \"outlined\",\n              onChange: event => {\n                updateNonTrackablePasswordConfirm(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"small\",\n              color: \"primary\",\n              style: {\n                marginTop: \"15px\",\n                marginLeft: \"5px\"\n              },\n              onClick: () => {\n                if (nonTrackable === nonTrackableConfirm) {\n                  setERPassword(nonTrackable, false);\n                } else {\n                  alert(\"Passwords do not match\");\n                }\n              },\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \" Show Passwords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"small\",\n              color: \"primary\",\n              style: {\n                marginTop: \"15px\",\n                marginLeft: \"5px\"\n              },\n              onClick: getPassword,\n              children: \"Show Current Passwords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), passwords === \"\" ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.showPasswordsText,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Trackable Password: \", passwords.tpassword]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Non-trackable Password: \", passwords.ntpassword]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: match.path,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"center\",\n              className: classes.metricGrid,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Puzzle Metrics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(PuzzleStats, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Euphorigen Admin Site\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Please Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textarea,\n        label: \"Password\",\n        variant: \"outlined\",\n        onChange: updatePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        style: {\n          marginTop: \"15px\",\n          marginLeft: \"5px\"\n        },\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Admin, \"d5wCB45Wie5qKEW03VSVYjVFObI=\", false, function () {\n  return [useHistory, useStyles, useRouteMatch];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/Admin.js"],"names":["React","useState","useHistory","useRouteMatch","Route","Switch","Grid","Typography","Button","TextField","AppBar","Toolbar","PuzzleStats","SetCookie","GetCookie","makeStyles","styles","useStyles","Admin","history","classes","match","loggedIn","setLogIn","password","setPassword","trackable","updateTrackablePassword","trackableConfirm","updateTrackablePasswordConfirm","nonTrackable","updateNonTrackablePassword","nonTrackableConfirm","updateNonTrackablePasswordConfirm","passwords","setPasswords","updatePassword","event","target","value","login","body","console","log","setTimeout","fetch","process","env","REACT_APP_API_URL","method","headers","JSON","stringify","then","response","status","get","auth","json","data","alert","getPassword","setERPassword","track","allContent","title","push","path","changePWGrid","textarea","marginTop","marginLeft","showPasswordsText","tpassword","ntpassword","metricGrid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom'\n\nimport { Grid, Typography, Button, TextField, AppBar, Toolbar } from \"@material-ui/core\";\nimport PuzzleStats from \"@/admin/components/PuzzleStats\"\nimport { SetCookie, GetCookie } from \"@/shared/UtilityFunctions\"\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"@/admin/style/adminStyle.js\";\nconst useStyles = makeStyles(styles);\n\nconst Admin = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    const match = useRouteMatch();\n\n    const [loggedIn, setLogIn] = useState(false)\n    const [password, setPassword] = useState(\"\");\n\n    const [trackable, updateTrackablePassword] = useState(\"\")\n    const [trackableConfirm, updateTrackablePasswordConfirm] = useState(\"\")\n    const [nonTrackable, updateNonTrackablePassword] = useState(\"\")\n    const [nonTrackableConfirm, updateNonTrackablePasswordConfirm] = useState(\"\")\n\n    const [passwords, setPasswords] = useState(\"\")\n\n    const updatePassword = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const login = () => {\n        var body =\n        {\n        \"password\": password,\n        \"management\": true\n        }\n\n        console.log(body)\n        setTimeout(() => {\n\n        fetch(`${process.env.REACT_APP_API_URL}/v1/sessions`, {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        })\n            .then((response) => {\n            if (response.status <= 201) {\n                console.log(response.headers.get(\"authorization\"))\n                const auth = response.headers.get(\"authorization\")\n                SetCookie(\"auth\", auth, 3600)\n                SetCookie(\"adminSession\", true, 3600)\n                response.json().then((data) => {\n                console.log(data)\n                })\n                setLogIn(true)\n            } else {\n                console.log(\"failed :(\", response.status)\n                alert(\"Incorrect password\")\n            }\n            })\n        }, 0)\n    }\n\n    const getPassword = () => {\n        setTimeout(() => {\n            fetch(`${process.env.REACT_APP_API_URL}/game/manage/password`, {\n                method: 'get',\n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': GetCookie('auth')\n                },\n            })\n                .then((response) => {\n                if (response.status <= 201) {\n                    response.json().then((data) => {\n                        setPasswords(data)\n                        console.log(data)\n                    })\n                } else {\n                    console.log(\"failed :(\", response.status)\n                }\n                })\n            }, 0)\n    }\n\n    const setERPassword = (password, track ) => {\n        var body =\n        {\n            \"password\": password,\n            \"track\": track\n        }\n\n        setTimeout(() => {\n        fetch(`${process.env.REACT_APP_API_URL}/game/manage/password`, {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': GetCookie('auth')\n            },\n            body: JSON.stringify(body)\n        })\n            .then((response) => {\n            if (response.status <= 201) {\n                console.log(\"changed\")\n                alert(\"Password changed to \" + password)\n            } else {\n                console.log(\"failed :(\", response.status)\n            }\n            })\n        }, 0)\n    }\n\n    if(GetCookie('adminSession') || loggedIn) {\n        return (\n            <div className={classes.allContent}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}\n                        onClick={()=>{\n                            history.push(match.path)\n                        }}>\n                        Euphorigen Admin\n                        </Typography>\n                        <Button color=\"inherit\" onClick={()=>{\n                            history.push(match.path + \"/passwords\")\n                        }}\n                        >Manage Passwords</Button>\n                        <Button color=\"inherit\" onClick={() => {\n                            SetCookie(\"auth\", \"\", 1)\n                            SetCookie(\"adminSession\", true, 1)\n                            history.push(\"/\")\n                        }}>Logout</Button>\n                    </Toolbar>\n                </AppBar>\n                <Switch>\n                    <Route path={`${match.path}/passwords`}>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            className={classes.changePWGrid}>\n                            <Typography variant =\"h4\"> Change Passwords</Typography>\n                            <br></br>\n                            <Typography variant =\"h5\"> Trackable Password</Typography>\n                            <TextField className={classes.textarea} label=\"Password\" variant=\"outlined\"\n                                onChange={(event)=>{\n                                    updateTrackablePassword(event.target.value)\n                                }}/>\n                            <TextField className={classes.textarea} label=\"Confirm Password\" variant=\"outlined\"\n                                onChange={(event)=>{\n                                    updateTrackablePasswordConfirm(event.target.value)\n                                }}/>\n                            <Button type=\"submit\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                style={{marginTop: \"15px\", marginLeft: \"5px\"}}\n                                onClick={()=> {\n                                    if(trackable === trackableConfirm) {\n                                        setERPassword(trackable,true)\n                                        alert(\"Trackable password changed to\" + trackable)\n                                    } else {\n                                        alert(\"Passwords do not match\")\n                                    }\n                                }}>\n                                Change Password\n                            </Button>\n                            <br></br>\n                            <Typography variant =\"h5\"> Non-Trackable Password</Typography>\n                            <TextField className={classes.textarea} label=\"Password\" variant=\"outlined\"\n                                onChange={(event)=>{\n                                    updateNonTrackablePassword(event.target.value)\n                                }}/>\n                            <TextField className={classes.textarea} label=\" Confirm Password\" variant=\"outlined\"\n                                onChange={(event)=>{\n                                    updateNonTrackablePasswordConfirm(event.target.value)\n                                }}/>\n                            <Button type=\"submit\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                style={{marginTop: \"15px\", marginLeft: \"5px\"}}\n                                onClick={()=> {\n                                    if(nonTrackable === nonTrackableConfirm) {\n                                        setERPassword(nonTrackable,false)\n                                    } else {\n                                        alert(\"Passwords do not match\")\n                                    }\n                                }}>\n                                Change Password\n                            </Button>\n                            <br></br>\n                            <Typography variant =\"h4\"> Show Passwords</Typography>\n\n                            <Button  type=\"submit\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                style={{marginTop: \"15px\", marginLeft: \"5px\"}}\n                                onClick={getPassword}\n                                >\n                                Show Current Passwords\n                            </Button>\n                                {passwords === \"\" ? null :\n                                <div className={classes.showPasswordsText}>\n                                    <div>Trackable Password: {passwords.tpassword}</div>\n                                    <div>Non-trackable Password: {passwords.ntpassword}</div>\n                                </div> }\n                        </Grid>\n                    </Route>\n                    <Route path={match.path}>\n                    <Grid\n                        container\n                        direction=\"column\"\n                        alignItems=\"center\">\n                            <Grid container\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                className={classes.metricGrid}>\n\n                                <Typography variant=\"h4\">\n                                    Puzzle Metrics\n                                </Typography>\n                                <br></br>\n                                <PuzzleStats></PuzzleStats>\n                            </Grid>\n                        </Grid>\n                    </Route>\n                </Switch>\n            </div>\n\n        )\n    } else {\n        return (\n            <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\">\n            <Typography variant=\"h4\">\n                Euphorigen Admin Site\n            </Typography>\n            <br></br>\n            <Typography>\n                Please Log In\n            </Typography>\n            <TextField className={classes.textarea} label=\"Password\" variant=\"outlined\"\n            onChange={updatePassword}/>\n            <Button  type=\"submit\"\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                style={{marginTop: \"15px\", marginLeft: \"5px\"}}\n                onClick={login}\n                >\n                Login\n            </Button>\n        </Grid>\n        )\n    }\n  };\n\n  export default Admin;\n"]},"metadata":{},"sourceType":"module"}