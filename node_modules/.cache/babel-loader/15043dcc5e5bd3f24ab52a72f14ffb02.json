{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/puzzles/puzzle5/Puzzle5.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomForm from \"@/shared/Components/CustomForm.js\";\nimport styles from \"./style\";\nimport { handleTextBoxChange } from \"@/shared/UtilityFunctions\"; // TODO: change to props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst puzzle5 = require(\"../../../rooms/euphorigen/json/puzzle5.json\");\n\nconst useStyles = makeStyles(styles);\n\nconst Puzzle5 = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    puzzleText,\n    password,\n    data\n  } = puzzle5;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    wrap: \"nowrap\",\n    className: classes.backgroundContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.backgroundImgContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        className: classes.contentContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          className: classes.messageAndNodeContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            className: classes.message,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: \"1em\"\n              },\n              children: puzzle5.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"675px\",\n              height: \"650px\",\n              marginTop: \"20px\"\n            },\n            children: [data.nodes.map((node, key) => {\n              return /*#__PURE__*/_jsxDEV(Name, {\n                name: node.id,\n                x: node.x + \"px\",\n                y: node.y + \"px\"\n              }, \"node-\" + key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"675\",\n              height: \"650\",\n              children: data.links.map((link, key) => {\n                let xStart = 0;\n                let yStart = 0;\n                let xEnd = 0;\n                let yEnd = 0;\n                data.nodes.forEach(node => {\n                  if (node.id === link.source) {\n                    xStart = node.x + 30;\n                    yStart = node.y + 30;\n                  } else if (node.id === link.target) {\n                    xEnd = node.x + 30;\n                    yEnd = node.y + 30;\n                  }\n                });\n                return /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: xStart,\n                  y1: yStart,\n                  x2: xEnd,\n                  y2: yEnd,\n                  stroke: \"#939598\",\n                  strokeWidth: \"5\"\n                }, \"line-\" + key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          className: classes.passwordAndPromptContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"body1\",\n            className: classes.textContainer,\n            children: [puzzleText.title, /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: puzzleText.main.map((value, key) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    label: \"\",\n                    size: \"small\",\n                    className: classes.textField,\n                    onBlur: function (event) {\n                      handleTextBoxChange(event, \"li-\" + key);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    className: classes.redText,\n                    children: `Story #${key + 1} `\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this)]\n                }, \"li-\" + key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            className: classes.passwordForm,\n            children: /*#__PURE__*/_jsxDEV(CustomForm, {\n              id: 5,\n              password: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Puzzle5, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Puzzle5;\n\nconst Name = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"60px\",\n      height: \"60px\",\n      borderRadius: \"40px\",\n      backgroundColor: \"#564f4f\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginLeft: `${props.x}`,\n      marginTop: `${props.y}`,\n      position: \"absolute\",\n      display: \"flex\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginBottom: \"3px\",\n        color: \"white\"\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Name;\nexport default Puzzle5;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Puzzle5\");\n$RefreshReg$(_c2, \"Name\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/shared/puzzles/puzzle5/Puzzle5.js"],"names":["React","Grid","makeStyles","TextField","Typography","CustomForm","styles","handleTextBoxChange","puzzle5","require","useStyles","Puzzle5","classes","puzzleText","password","data","backgroundContainer","backgroundImgContainer","contentContainer","messageAndNodeContainer","message","padding","width","height","marginTop","nodes","map","node","key","id","x","y","links","link","xStart","yStart","xEnd","yEnd","forEach","source","target","passwordAndPromptContainer","textContainer","title","main","value","textField","event","redText","passwordForm","Name","props","borderRadius","backgroundColor","justifyContent","alignItems","textAlign","marginLeft","position","display","marginBottom","color","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CustomForm from \"@/shared/Components/CustomForm.js\";\n\nimport styles from \"./style\";\nimport { handleTextBoxChange } from \"@/shared/UtilityFunctions\"\n\n// TODO: change to props\nconst puzzle5 = require(\"../../../rooms/euphorigen/json/puzzle5.json\");\n\nconst useStyles = makeStyles(styles);\n\nconst Puzzle5 = () => {\n  const classes = useStyles();\n  const { puzzleText, password, data } = puzzle5;\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" wrap=\"nowrap\" className={classes.backgroundContainer}>\n      <Grid className={classes.backgroundImgContainer}>\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" wrap=\"nowrap\" className={classes.contentContainer}>\n          <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className={classes.messageAndNodeContainer}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" className={classes.message}>\n              <span style={{padding: \"1em\"}}>\n                {puzzle5.message}\n              </span>\n            </Grid>\n\n            <div style={{width:\"675px\", height:\"650px\", marginTop:\"20px\"}}>\n              {data.nodes.map((node, key)=>{\n                return (\n                  <Name key={\"node-\"+key} name={node.id} x={node.x + \"px\"} y={node.y + \"px\"}/>\n                )\n              })}\n\n              <svg width=\"675\" height=\"650\">\n                {data.links.map((link, key) => {\n                  let xStart = 0\n                  let yStart = 0\n                  let xEnd = 0\n                  let yEnd = 0\n                  data.nodes.forEach((node)=>{\n                    if(node.id === link.source) {\n                      xStart = node.x + 30\n                      yStart = node.y + 30\n                    } else if (node.id === link.target) {\n                      xEnd = node.x + 30\n                      yEnd = node.y + 30\n                    }\n                  })\n                  return (\n                    <line key={\"line-\"+key} x1={xStart} y1={yStart} x2={xEnd} y2={yEnd} stroke=\"#939598\" strokeWidth=\"5\"/>\n                  )\n                })}\n              </svg>\n            </div>\n          </Grid>\n\n          <Grid container direction=\"column\" alignItems=\"center\" className={classes.passwordAndPromptContainer}>\n            <Typography component=\"div\" variant=\"body1\" className={classes.textContainer}>\n              {puzzleText.title}\n              <ul>\n                {puzzleText.main.map((value, key) => (\n                  <>\n                  <li key={\"li-\"+key}>\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"\"\n                    size=\"small\"\n                    className={classes.textField}\n                    onBlur={function(event) {\n                      handleTextBoxChange(event, \"li-\"+key)\n                    }}\n                  />\n                    <Typography\n                      component=\"span\"\n                      className={classes.redText}>\n                      {`Story #${key + 1} `}\n                    </Typography>\n                    <span>{value}</span>\n                  </li>\n                  <br/>\n                  </>\n                ))}\n              </ul>\n            </Typography>\n\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className={classes.passwordForm}>\n              <CustomForm id={5} password={password}/>\n            </Grid>\n\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Name = (props) => {\n  return (\n    <div style={{width:\"60px\",height:\"60px\",borderRadius:\"40px\",backgroundColor:\"#564f4f\", justifyContent:\"center\",alignItems:\"center\",textAlign:\"center\", marginLeft:`${props.x}`,marginTop:`${props.y}`, position:\"absolute\",display:\"flex\"}}>\n      <span style={{marginBottom:\"3px\",color:\"white\"}}>{props.name}</span>\n    </div>\n  );\n}\n\n\nexport default Puzzle5;\n"]},"metadata":{},"sourceType":"module"}