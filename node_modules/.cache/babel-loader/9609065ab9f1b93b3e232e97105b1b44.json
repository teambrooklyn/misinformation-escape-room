{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/components/TimeStats.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"@/admin/style/timeStatsStyle.js\";\nimport Histogram from \"@/admin/components/Histogram\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeStats = props => {\n  _s();\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n\n  if (props.timeData) {\n    var seenIDs = {};\n    let timeStart = props.timeData.filter(d => d.info === \"start\");\n    timeStart = timeStart.filter(function (currentObject) {\n      if (currentObject.playerid in seenIDs) {\n        return false;\n      } else {\n        seenIDs[currentObject.playerid] = true;\n        return true;\n      }\n    });\n    seenIDs = {};\n    let timeEnd = props.timeData.filter(d => d.info === \"end\");\n    timeEnd = timeEnd.filter(function (currentObject) {\n      if (currentObject.playerid in seenIDs) {\n        return false;\n      } else {\n        seenIDs[currentObject.playerid] = true;\n        return true;\n      }\n    });\n    let joinedData = [];\n    timeStart.forEach(startElement => {\n      timeEnd.forEach(endElement => {\n        if (startElement.playerid === endElement.playerid) {\n          var toLoopArray = [startElement, endElement];\n          var resultantObject = {};\n          toLoopArray.forEach(function (item, index) {\n            for (var keys in item) {\n              if (!resultantObject.hasOwnProperty(keys)) {\n                resultantObject[keys] = item[keys];\n              } else {\n                resultantObject[keys + index] = item[keys];\n              }\n            }\n          });\n          joinedData.push(resultantObject);\n        }\n      });\n    });\n    let times = joinedData.map(element => {\n      let date1 = new Date(element.timeinitiated);\n      let date2 = new Date(element.timeinitiated1);\n      return (date2 - date1) / 1000;\n    });\n    let avgTime = (times.reduce((a, b) => a + b) / times.length / 60).toFixed(2);\n    let labels = ['0-5', '5-10', '10-15', '15-20', '20+'];\n    let histogramData = new Array(5).fill(0);\n    times.forEach(time => {\n      if (time <= 300) {\n        histogramData[0]++;\n      } else if (time <= 600) {\n        histogramData[1]++;\n      } else if (time <= 900) {\n        histogramData[2]++;\n      } else if (time <= 1200) {\n        histogramData[3]++;\n      } else {\n        histogramData[4]++;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Average Puzzle Completion Time: \", avgTime, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Histogram, {\n        data: histogramData,\n        labels: labels,\n        unit: \"Num groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(TimeStats, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = TimeStats;\nexport default TimeStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeStats\");","map":{"version":3,"sources":["/Users/Justin/coursework/info490-491/apps-lokisloop-euphorigen/src/admin/components/TimeStats.js"],"names":["React","Grid","Typography","makeStyles","styles","Histogram","TimeStats","props","useStyles","classes","timeData","seenIDs","timeStart","filter","d","info","currentObject","playerid","timeEnd","joinedData","forEach","startElement","endElement","toLoopArray","resultantObject","item","index","keys","hasOwnProperty","push","times","map","element","date1","Date","timeinitiated","date2","timeinitiated1","avgTime","reduce","a","b","length","toFixed","labels","histogramData","Array","fill","time","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"@/admin/style/timeStatsStyle.js\";\n\nimport Histogram from \"@/admin/components/Histogram\";\n\nconst TimeStats = (props) => {\n    const useStyles = makeStyles(styles);\n    const classes = useStyles();\n\n    if(props.timeData) {\n        var seenIDs = {};\n        let timeStart = props.timeData.filter(d => d.info === \"start\")\n        timeStart = timeStart.filter(function(currentObject) {\n            if (currentObject.playerid in seenIDs) {\n                return false;\n            } else {\n                seenIDs[currentObject.playerid] = true;\n                return true;\n            }\n        });\n\n        seenIDs = {};\n        let timeEnd = props.timeData.filter(d => d.info === \"end\")\n        timeEnd = timeEnd.filter(function(currentObject) {\n            if (currentObject.playerid in seenIDs) {\n                return false;\n            } else {\n                seenIDs[currentObject.playerid] = true;\n                return true;\n            }\n        });\n\n        let joinedData = []\n        timeStart.forEach((startElement)=>{\n            timeEnd.forEach((endElement)=>{\n                if(startElement.playerid === endElement.playerid) {\n                    var toLoopArray = [startElement, endElement]\n\n                    var resultantObject = {};\n                    toLoopArray.forEach(function(item, index) {\n                        for (var keys in item) {\n                            if (!(resultantObject.hasOwnProperty(keys))) {\n                            resultantObject[keys] = item[keys]\n                            } else {\n                            resultantObject[keys + index] = item[keys]\n                            }\n                        }\n                    })\n                    joinedData.push(resultantObject)\n                }\n            })\n        })\n\n        let times = joinedData.map((element)=>{\n            let date1 = new Date(element.timeinitiated)\n            let date2 = new Date(element.timeinitiated1)\n            return (date2 - date1)/1000\n        })\n\n        let avgTime = ((times.reduce((a, b) => a + b) / times.length)/60).toFixed(2);\n\n        let labels = ['0-5', '5-10', '10-15', '15-20', '20+']\n\n        let histogramData = new Array(5).fill(0);\n        times.forEach((time)=>{\n            if(time <= 300) {\n                histogramData[0]++\n            } else if (time <= 600) {\n                histogramData[1]++\n            } else if (time <= 900) {\n                histogramData[2]++\n            } else if (time <= 1200) {\n                histogramData[3]++\n            } else {\n                histogramData[4]++\n            }\n        })\n\n        return (\n            <Grid className={classes.content}>\n                <Typography variant=\"h5\">Average Puzzle Completion Time: {avgTime} minutes</Typography>\n                <Histogram data={histogramData} labels={labels} unit={\"Num groups\"}></Histogram>\n            </Grid>\n        )\n    } else {\n        return (\n            <div>loading</div>\n        )\n    }\n}\n\nexport default TimeStats;"]},"metadata":{},"sourceType":"module"}